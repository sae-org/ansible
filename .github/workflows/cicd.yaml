name: Rsync Ansible files to controller.

on:
  push:
    branches: [ "main" ]

permissions:
  id-token: write   # OIDC
  contents: read

jobs:
  sync:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      ROLE_ARN: arn:aws:iam::886687538523:role/gha-ansible-controller-iam-role 

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Fetch controller connection details
        shell: bash
        run: |
          CONTROLLER_HOST=$(aws secretsmanager get-secret-value \
            --secret-id ansible/controller/host \
            --query SecretString --output text)
          CONTROLLER_USER=$(aws secretsmanager get-secret-value \
            --secret-id ansible/controller/user \
            --query SecretString --output text)
          CONTROLLER_KEY=$(aws secretsmanager get-secret-value \
            --secret-id ansible/controller/ssh_key_priv \
            --query SecretString --output text)

          mkdir -p ~/.ssh
          printf '%s' "$CONTROLLER_KEY" > ~/.ssh/controller.pem
          chmod 600 ~/.ssh/controller.pem

          echo "CONTROLLER_HOST=$CONTROLLER_HOST" >> $GITHUB_ENV
          echo "CONTROLLER_USER=$CONTROLLER_USER" >> $GITHUB_ENV

      - name: Test SSH to controller
        run: |
          ssh -vv -o BatchMode=yes -o StrictHostKeyChecking=no \
            -i ~/.ssh/controller.pem "$CONTROLLER_USER@$CONTROLLER_HOST" echo ok

      - name: Trust server host key
        shell: bash 
        run: |
          mkdir -p ~/.ssh
          touch ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
          ssh-keyscan -v -H "$CONTROLLER_HOST" >> ~/.ssh/known_hosts

      - name: Ensure target dir exists on server
        shell: bash
        run: |
          ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -i ~/.ssh/controller.pem \
            "$CONTROLLER_USER@$CONTROLLER_HOST" "mkdir -p /home/$CONTROLLER_USER/ansible"

      - name: Install All managed host SSH keys on controller (by prefix)
        shell: bash
        env: 
          SECRET_PREFIX: ansible/managed_hosts_ssh_keys/   # prefix for all project SSH key secrets
        run: |
          SECRET_NAMES=$(aws secretsmanager list-secrets \
            --query "SecretList[?starts_with(Name, '${SECRET_PREFIX}')].Name" \
            --output text)

          ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -i ~/.ssh/controller.pem \
            "$CONTROLLER_USER@$CONTROLLER_HOST" \
            "mkdir -p ~/.ssh/managed_hosts && chmod 700 ~/.ssh/managed_hosts"

          for NAME in $SECRET_NAMES; do
            echo "Installing key: $NAME"

            KEY=$(aws secretsmanager get-secret-value --secret-id "$NAME" \
                  --query SecretString --output text)

            BASENAME=$(basename "$NAME")

            ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -i ~/.ssh/controller.pem \
              "$CONTROLLER_USER@$CONTROLLER_HOST" \
              "printf '%s' \"$KEY\" > ~/.ssh/managed_hosts/${BASENAME}.pem && chmod 600 ~/.ssh/managed_hosts/${BASENAME}.pem"
          done

      - name: Rsync only changed files to server
        shell: bash
        run: |
          rsync -azP \
            --exclude-from='.gitignore' \
            -e "ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -i ~/.ssh/controller.pem" \
            ansible/ "$CONTROLLER_USER@$CONTROLLER_HOST:/home/$CONTROLLER_USER/ansible/"

      - name: Change perms of vault pass file to make it +x, change ownership; Create a vault file and add secrets from aws and encrypt file (server pulls secrets from secret manager)
        env:
          SECRET_ID: ansible/vault/secrets_file
        shell: bash
        run: |
          ssh -i ~/.ssh/controller.pem -o StrictHostKeyChecking=no "$CONTROLLER_USER@$CONTROLLER_HOST" "
          SECRET_ID="${SECRET_ID}"
          AWS_REGION="${AWS_REGION}"

          cd ~/ansible
          mkdir -p group_vars/all

          aws secretsmanager get-secret-value \
            --secret-id "$SECRET_ID" \
            --region "$AWS_REGION" \
            --query SecretString --output text > group_vars/all/vault.yml

          ansible-vault encrypt group_vars/all/vault.yml \
            --vault-password-file ~/ansible/scripts/secrets_script.sh
          "