name: Rsync Ansible files to controller 

on:
  push:
    branches: [ "main" ]

permissions:
  id-token: write   # OIDC
  contents: read

jobs:
  sync:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      ROLE_ARN: arn:aws:iam::886687538523:role/gha-ansible-controller-iam-role 

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Fetch controller connection details
        shell: bash
        run: |
          CONTROLLER_HOST=$(aws secretsmanager get-secret-value \
            --secret-id ansible/controller/host \
            --query SecretString --output text)
          CONTROLLER_USER=$(aws secretsmanager get-secret-value \
            --secret-id ansible/controller/user \
            --query SecretString --output text)
          CONTROLLER_KEY=$(aws secretsmanager get-secret-value \
            --secret-id ansible/controller/ssh_key_priv \
            --query SecretString --output text)

          print '%s' "$CONTROLLER_KEY" > controller.pem
          chmod 600 controller.pem

          echo "CONTROLLER_HOST=$HOST" >> $GITHUB_ENV
          echo "CONTROLLER_USER=$USER" >> $GITHUB_ENV

      - name: Trust server host key
        shell: bash 
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "$HOST" >> ~/.ssh/known_hosts

      - name: Ensure target dir exists on server
        shell: bash
        run: |
          ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -i controller.pem \
            "$USER@$HOST" "mkdir -p /home/$USER/ansible"

      - name: Install managed host SSH key on controller 
        shell: bash
        run: |
          MANAGED_HOST_KEY=$(aws secretsmanager get-secret-value \
            --secret-id ansible/managed_hosts_ssh_keys/devops_portfolio \
            --query SecretString --output text || true)

          if [ -n "$MANAGED_HOST_KEY" ]; then
            ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -i controller.pem \
              "$USER@$HOST" "
                mkdir -p ~/.ssh && chmod 700 ~/.ssh
                printf '%s' \"$MANAGED_HOST_KEY\" > ~/.ssh/managed_hosts_ssh_keys.pem
                chmod 600 ~/.ssh/managed_hosts_ssh_keys.pem
              "
          else
            echo "No managed host ssh key found; skipping."
          fi

      - name: Rsync only changed files to server
        shell: bash
        run: |
          rsync -azP \
            --exclude-from='.gitignore' \
            -e "ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -i controller.pem" \
            ansible/ "$CONTROLLER_USER@$CONTROLLER_HOST:/home/$CONTROLLER_USER/ansible/"

      - name: Change perms of vault pass file to make it +x, change ownership; Create a vault file and add secrets from aws and encrypt file (server pulls secrets from secret manager)
        env:
          SECRET_ID: ansible/vault/my-portfolio/secrets_file
        shell: bash
        run: |
          ssh -i controller.pem -o StrictHostKeyChecking=no "$CONTROLLER_USER@$CONTROLLER_HOST" "
          SECRET_ID="${SECRET_ID}"
          AWS_REGION="${AWS_REGION}"

          cd ~/ansible
          mkdir -p group_vars/my-portfolio/all

          aws secretsmanager get-secret-value \
            --secret-id "$SECRET_ID" \
            --region "$AWS_REGION" \
            --query SecretString --output text > group_vars/my-portfolio/all/vault.yml

          ansible-vault encrypt group_vars/my-portfolio/all/vault.yml \
            --vault-password-file ~/ansible/secrets_script.sh
          "